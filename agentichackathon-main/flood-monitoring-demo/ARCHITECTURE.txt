╔══════════════════════════════════════════════════════════════════════════════╗
║                                                                              ║
║         🌊 FLOOD MONITORING + AI AGENT SYSTEM ARCHITECTURE 🤖                ║
║                                                                              ║
╚══════════════════════════════════════════════════════════════════════════════╝


┌─────────────────────────────────────────────────────────────────────────────┐
│                          USER INTERFACE (Streamlit)                         │
│                        http://localhost:8501                                │
│                                                                             │
│  ┌──────────────────┐   ┌──────────────────┐   ┌──────────────────┐       │
│  │ 🌧️ Scenario 1    │   │ ⛈️ Scenario 2     │   │ 🌦️ Scenario 3     │       │
│  │ Moderate Flood   │   │ Severe Flood     │   │ Light Rain       │       │
│  └────────┬─────────┘   └──────────────────┘   └──────────────────┘       │
│           │ [CLICK]                                                        │
└───────────┼────────────────────────────────────────────────────────────────┘
            │
            │ Generates Mock Weather Alert JSON:
            │ {
            │   "alert_id": "WX-FLOOD-...",
            │   "severity": {"level": 3},
            │   "precipitation": {"expected_amount_mm": 95},
            │   "probability_percent": 75
            │ }
            │
            ▼
┌───────────────────────────────────────────────────────────────────────────┐
│                         BACKEND (FastAPI)                                 │
│                      http://localhost:8000                                │
│                                                                           │
│  POST /api/alerts/weather                                                │
│         │                                                                 │
│         ├─► Store event                                                  │
│         ├─► Log receipt                                                  │
│         └─► Invoke AI Agent ───────────────────────┐                     │
│                                                     │                     │
└─────────────────────────────────────────────────────┼─────────────────────┘
                                                      │
                                                      │
                  ┌───────────────────────────────────┘
                  │
                  ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                        AI ORCHESTRATOR AGENT                                │
│                   (flood_orchestrator_agent)                                │
│                                                                             │
│  Model: Gemini 2.0 Flash (via Vertex AI)                                  │
│  Framework: Google ADK (Agent Development Kit)                             │
│                                                                             │
│  ┌─────────────────────────────────────────────────────────────────────┐   │
│  │ Agent Instruction:                                                  │   │
│  │ "You are the Flood Monitoring Orchestrator AI Agent.               │   │
│  │  Analyze weather alerts and coordinate flood response..."           │   │
│  └─────────────────────────────────────────────────────────────────────┘   │
│                                                                             │
│  Tools Available:                                                           │
│  ┌─────────────────────────┐   ┌─────────────────────────────┐            │
│  │ process_weather_alert() │   │ analyze_flood_risk()        │            │
│  ├─────────────────────────┤   ├─────────────────────────────┤            │
│  │ • Parse alert JSON      │   │ • Calculate risk score      │            │
│  │ • Assess severity 1-5   │   │ • Determine risk level      │            │
│  │ • Check thresholds      │   │ • Make recommendations      │            │
│  │ • Format response       │   │ • Provide confidence        │            │
│  └─────────────────────────┘   └─────────────────────────────┘            │
│           │                              │                                 │
│           └──────────┬───────────────────┘                                 │
│                      │                                                     │
│                      ▼                                                     │
│  ┌─────────────────────────────────────────────────────────────────────┐  │
│  │ Agent Processing:                                                   │  │
│  │                                                                     │  │
│  │ 1. LLM reads weather alert JSON                                    │  │
│  │ 2. Decides to use process_weather_alert() tool                     │  │
│  │ 3. Tool executes → severity assessment                             │  │
│  │ 4. LLM analyzes tool output                                        │  │
│  │ 5. Decides to use analyze_flood_risk() tool                        │  │
│  │ 6. Tool executes → risk scoring                                    │  │
│  │ 7. LLM synthesizes final response                                  │  │
│  └─────────────────────────────────────────────────────────────────────┘  │
│                      │                                                     │
│                      ▼                                                     │
│  ┌─────────────────────────────────────────────────────────────────────┐  │
│  │ Agent Response:                                                     │  │
│  │                                                                     │  │
│  │ "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━             │  │
│  │  🌧️ WEATHER ALERT RECEIVED (T-2:00:00)                            │  │
│  │  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━             │  │
│  │                                                                     │  │
│  │  Severity: 3/5                                                     │  │
│  │  Risk: MODERATE                                                    │  │
│  │  Expected Precipitation: 95mm                                      │  │
│  │                                                                     │  │
│  │  ✅ Severity threshold met - Proceeding to next phase              │  │
│  │                                                                     │  │
│  │  NEXT STEPS:                                                       │  │
│  │  - Deploy river gauge sensors (T-1:00:00)                          │  │
│  │  - Activate satellite imagery analysis                             │  │
│  │                                                                     │  │
│  │  🎯 FLOOD RISK ANALYSIS                                             │  │
│  │  Overall Risk Score: 3.2/5                                         │  │
│  │  Risk Level: HIGH                                                  │  │
│  │  Recommendation: PREPARE FOR EVACUATION                            │  │
│  │  Confidence: 85%"                                                  │  │
│  └─────────────────────────────────────────────────────────────────────┘  │
│                      │                                                     │
└──────────────────────┼─────────────────────────────────────────────────────┘
                       │
                       │ Response returned to Backend
                       │
                       ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                         BACKEND (FastAPI)                                   │
│                                                                             │
│  • Receives agent response                                                 │
│  • Stores as event                                                         │
│  • Returns to frontend                                                     │
│                                                                             │
└─────────────────────┬───────────────────────────────────────────────────────┘
                      │
                      │ JSON Response:
                      │ {
                      │   "status": "success",
                      │   "alert_id": "WX-FLOOD-...",
                      │   "agent_response": "...",
                      │   "orchestrator_status": "completed"
                      │ }
                      │
                      ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                      USER INTERFACE (Streamlit)                             │
│                                                                             │
│  📊 Monitoring Timeline:                                                   │
│  ┌─────────────────────────────────────────────────────────────────────┐  │
│  │ 🕐 T-2:00:00 - Weather Alert                          [10:22:15]   │  │
│  │ Status: ✅ Sent to Orchestrator                                    │  │
│  │ [📋 View Alert Details]                                            │  │
│  └─────────────────────────────────────────────────────────────────────┘  │
│                                                                             │
│  ┌─────────────────────────────────────────────────────────────────────┐  │
│  │ 🕐 T-2:00:00 - AI Agent Response                      [10:22:23]   │  │
│  │ Status: ✅ Agent Analysis Complete                                 │  │
│  │ [📋 View Details] ◄── CLICK HERE TO SEE AI ANALYSIS               │  │
│  └─────────────────────────────────────────────────────────────────────┘  │
│                                                                             │
└─────────────────────────────────────────────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════════════════╗
║                      🎮 ALTERNATIVE: DEV PLAYGROUND                          ║
╚══════════════════════════════════════════════════════════════════════════════╝

You can also test the AI Agent directly:

┌─────────────────────────────────────────────────────────────────────────────┐
│                    Dev Playground (Streamlit ADK UI)                        │
│                       http://localhost:8501                                 │
│                  (from my-awesome-agent directory)                          │
│                                                                             │
│  User: "Analyze this weather alert: {...JSON...}"                          │
│         │                                                                   │
│         ▼                                                                   │
│  ┌─────────────────────────────────────────────────────────┐              │
│  │ Same AI Agent (flood_orchestrator_agent)                │              │
│  │ • Processes input                                        │              │
│  │ • Uses same tools                                        │              │
│  │ • Returns same analysis                                  │              │
│  └─────────────────────────────────────────────────────────┘              │
│         │                                                                   │
│         ▼                                                                   │
│  Agent: "🌧️ WEATHER ALERT RECEIVED... [analysis]"                         │
│                                                                             │
│  💡 This is the SAME agent that responds in Streamlit!                     │
│     Use playground for quick iteration and testing.                        │
│                                                                             │
└─────────────────────────────────────────────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════════════════╗
║                           📁 FILE STRUCTURE                                  ║
╚══════════════════════════════════════════════════════════════════════════════╝

agent-starter-pack/
│
├── flood-monitoring-demo/           ← Your Streamlit app
│   ├── app/
│   │   ├── frontend.py              ← UI with Scenario buttons
│   │   ├── backend.py               ← API server + agent invoker
│   │   └── agent_client.py          ← Bridge to AI agent
│   ├── mock_data/
│   │   └── weather_alert.py         ← Generates test data
│   └── START_HERE.md                ← Quick start guide
│
└── my-awesome-agent/                ← Your AI agent
    ├── app/
    │   ├── agent.py                 ← Entry point
    │   ├── agents/
    │   │   └── flood_orchestrator.py  ← 🤖 THE AI AGENT
    │   └── tools/
    │       └── flood_monitoring_tools.py  ← Agent's decision logic
    └── Makefile                     ← `make playground` to test


╔══════════════════════════════════════════════════════════════════════════════╗
║                        🚀 HOW TO RUN EVERYTHING                              ║
╚══════════════════════════════════════════════════════════════════════════════╝

Terminal 1:
$ cd flood-monitoring-demo
$ python app/backend.py

Terminal 2:
$ cd flood-monitoring-demo  
$ streamlit run app/frontend.py

Terminal 3 (Optional - for testing agent):
$ cd my-awesome-agent
$ make playground


╔══════════════════════════════════════════════════════════════════════════════╗
║                          ✅ WHAT YOU BUILT                                   ║
╚══════════════════════════════════════════════════════════════════════════════╝

✓ Streamlit UI with scenario buttons
✓ FastAPI backend for receiving alerts
✓ AI Orchestrator Agent (Gemini 2.0 Flash)
✓ Custom tools for flood analysis
✓ Full integration: click → AI analyzes → see results
✓ Dev playground for testing/iteration
✓ Production-ready architecture
✓ Hackathon-ready demo!


╔══════════════════════════════════════════════════════════════════════════════╗
║                       🏆 YOU'RE READY TO WIN!                                ║
╚══════════════════════════════════════════════════════════════════════════════╝

